#include <iostream>
#include <bits/stdc++.h>

using namespace std;

int main()
{
    int a[4];
    int n,tot;
    
    
    cin>>n;
    
    for(int i=0;i<n;i++)
        cin>>a[i];
        
    //sort(a,a+n,greater<int>());
        
    cin>>tot;
        
    
    
    int arr[n+1][tot+1];
    memset(arr,0,sizeof(arr));
    
    
    //to initiaize first column as 1
    for(int i=0;i<=n;i++)
        arr[i][0]=1;
    
    //to count total subset
    for(int i=1;i<=n;i++)
    {
        for(int j=1;j<=tot;j++)
        {
            if(j<a[i-1])
                arr[i][j]=arr[i-1][j];
            else {
                arr[i][j]=arr[i-1][j]+arr[i][j-a[i-1]];
            }
        }
    }
    
    
    //to print the matrix
    cout<<"matrix is:"<<endl;
    for(int i=0;i<=n;i++)
    {
        for(int j=0;j<=tot;j++)
        {
            cout<<arr[i][j];
        }
        cout<<endl;
    }
    
    
    //total possible subsets
    cout<<endl<<"total possible subsets are:"<<arr[n][tot]<<endl;
    
    
    //to print subset
    cout<<endl<<"Subsets for a given sum is:"<<endl;
    for(int i=1,k=0;i<=n;i++)
    {
        vector<int> p;
        if(arr[i][tot]>k)
        {
            k++;
            for(int j=i,sum=0,flag=0;j>=1;j--)
            {
                while(1){
                    sum=accumulate(p.begin(),p.end(),0);
                    if(sum==tot)
                    {
                        if(flag==0)
                            p.push_back(a[j-1]);
                        break;
                    } else if(sum<tot)
                    {
                        p.push_back(a[j-1]);
                        flag=1;
                    } else {
                        p.pop_back();
                        break;
                    }
                }
            }
            

            for(auto m=p.begin();m<p.end();m++)
            {
                cout<<*m<<" ";
            }
        }
        cout<<endl;
    }
    
    
    
    
    
    
    
    
    return 0;
}
